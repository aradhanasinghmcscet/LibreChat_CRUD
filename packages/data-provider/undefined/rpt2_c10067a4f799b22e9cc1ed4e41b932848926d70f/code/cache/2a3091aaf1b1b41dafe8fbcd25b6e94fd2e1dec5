{"code":"import { __assign, __awaiter, __generator, __spreadArray } from \"tslib\";\nimport { SearchCategories, SafeSearchTypes } from './config';\nimport { extractVariableName } from './utils';\nimport { AuthType } from './schemas';\nexport function loadWebSearchConfig(config) {\n    var _a, _b, _c, _d, _e, _f;\n    var serperApiKey = (_a = config === null || config === void 0 ? void 0 : config.serperApiKey) !== null && _a !== void 0 ? _a : '${SERPER_API_KEY}';\n    var firecrawlApiKey = (_b = config === null || config === void 0 ? void 0 : config.firecrawlApiKey) !== null && _b !== void 0 ? _b : '${FIRECRAWL_API_KEY}';\n    var firecrawlApiUrl = (_c = config === null || config === void 0 ? void 0 : config.firecrawlApiUrl) !== null && _c !== void 0 ? _c : '${FIRECRAWL_API_URL}';\n    var jinaApiKey = (_d = config === null || config === void 0 ? void 0 : config.jinaApiKey) !== null && _d !== void 0 ? _d : '${JINA_API_KEY}';\n    var cohereApiKey = (_e = config === null || config === void 0 ? void 0 : config.cohereApiKey) !== null && _e !== void 0 ? _e : '${COHERE_API_KEY}';\n    var safeSearch = (_f = config === null || config === void 0 ? void 0 : config.safeSearch) !== null && _f !== void 0 ? _f : SafeSearchTypes.MODERATE;\n    return __assign(__assign({}, config), { safeSearch: safeSearch, jinaApiKey: jinaApiKey, cohereApiKey: cohereApiKey, serperApiKey: serperApiKey, firecrawlApiKey: firecrawlApiKey, firecrawlApiUrl: firecrawlApiUrl });\n}\nexport var webSearchAuth = {\n    providers: {\n        serper: {\n            serperApiKey: 1,\n        },\n    },\n    scrapers: {\n        firecrawl: {\n            firecrawlApiKey: 1,\n            /** Optional (0) */\n            firecrawlApiUrl: 0,\n        },\n    },\n    rerankers: {\n        jina: { jinaApiKey: 1 },\n        cohere: { cohereApiKey: 1 },\n    },\n};\n/**\n * Extracts all API keys from the webSearchAuth configuration object\n */\nexport function getWebSearchKeys() {\n    var keys = [];\n    // Iterate through each category (providers, scrapers, rerankers)\n    for (var _i = 0, _a = Object.keys(webSearchAuth); _i < _a.length; _i++) {\n        var category = _a[_i];\n        var categoryObj = webSearchAuth[category];\n        // Iterate through each service within the category\n        for (var _b = 0, _c = Object.keys(categoryObj); _b < _c.length; _b++) {\n            var service = _c[_b];\n            var serviceObj = categoryObj[service];\n            // Extract the API keys from the service\n            for (var _d = 0, _e = Object.keys(serviceObj); _d < _e.length; _d++) {\n                var key = _e[_d];\n                keys.push(key);\n            }\n        }\n    }\n    return keys;\n}\nexport var webSearchKeys = getWebSearchKeys();\nexport function extractWebSearchEnvVars(_a) {\n    var keys = _a.keys, config = _a.config;\n    if (!config) {\n        return [];\n    }\n    var authFields = [];\n    var relevantKeys = keys.filter(function (k) { return k in config; });\n    for (var _i = 0, relevantKeys_1 = relevantKeys; _i < relevantKeys_1.length; _i++) {\n        var key = relevantKeys_1[_i];\n        var value = config[key];\n        if (typeof value === 'string') {\n            var varName = extractVariableName(value);\n            if (varName) {\n                authFields.push(varName);\n            }\n        }\n    }\n    return authFields;\n}\n/**\n * Loads and verifies web search authentication values\n * @param params - Authentication parameters\n * @returns Authentication result\n */\nexport function loadWebSearchAuth(_a) {\n    var _b, _c;\n    var userId = _a.userId, webSearchConfig = _a.webSearchConfig, loadAuthValues = _a.loadAuthValues, _d = _a.throwError, throwError = _d === void 0 ? true : _d;\n    return __awaiter(this, void 0, void 0, function () {\n        /** Type-safe iterator for the category-service combinations */\n        function checkAuth(category) {\n            return __awaiter(this, void 0, void 0, function () {\n                var isUserProvided, specificService, services, _i, services_1, service, serviceConfig, requiredKeys, optionalKeys, key, typedKey, requiredAuthFields, optionalAuthFields, allKeys, allAuthFields, optionalSet, authValues, allFieldsAuthenticated, j, field, value, originalKey, _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            isUserProvided = false;\n                            if (category === SearchCategories.PROVIDERS && (webSearchConfig === null || webSearchConfig === void 0 ? void 0 : webSearchConfig.searchProvider)) {\n                                specificService = webSearchConfig.searchProvider;\n                            }\n                            else if (category === SearchCategories.SCRAPERS && (webSearchConfig === null || webSearchConfig === void 0 ? void 0 : webSearchConfig.scraperType)) {\n                                specificService = webSearchConfig.scraperType;\n                            }\n                            else if (category === SearchCategories.RERANKERS && (webSearchConfig === null || webSearchConfig === void 0 ? void 0 : webSearchConfig.rerankerType)) {\n                                specificService = webSearchConfig.rerankerType;\n                            }\n                            services = specificService\n                                ? [specificService]\n                                : Object.keys(webSearchAuth[category]);\n                            _i = 0, services_1 = services;\n                            _b.label = 1;\n                        case 1:\n                            if (!(_i < services_1.length)) return [3 /*break*/, 6];\n                            service = services_1[_i];\n                            // Skip if the service doesn't exist in the webSearchAuth config\n                            if (!webSearchAuth[category][service]) {\n                                return [3 /*break*/, 5];\n                            }\n                            serviceConfig = webSearchAuth[category][service];\n                            requiredKeys = [];\n                            optionalKeys = [];\n                            for (key in serviceConfig) {\n                                typedKey = key;\n                                if (serviceConfig[typedKey] === 1) {\n                                    requiredKeys.push(typedKey);\n                                }\n                                else if (serviceConfig[typedKey] === 0) {\n                                    optionalKeys.push(typedKey);\n                                }\n                            }\n                            if (requiredKeys.length === 0)\n                                return [3 /*break*/, 5];\n                            requiredAuthFields = extractWebSearchEnvVars({\n                                keys: requiredKeys,\n                                config: webSearchConfig,\n                            });\n                            optionalAuthFields = extractWebSearchEnvVars({\n                                keys: optionalKeys,\n                                config: webSearchConfig,\n                            });\n                            if (requiredAuthFields.length !== requiredKeys.length)\n                                return [3 /*break*/, 5];\n                            allKeys = __spreadArray(__spreadArray([], requiredKeys, true), optionalKeys, true);\n                            allAuthFields = __spreadArray(__spreadArray([], requiredAuthFields, true), optionalAuthFields, true);\n                            optionalSet = new Set(optionalAuthFields);\n                            _b.label = 2;\n                        case 2:\n                            _b.trys.push([2, 4, , 5]);\n                            return [4 /*yield*/, loadAuthValues({\n                                    userId: userId,\n                                    authFields: allAuthFields,\n                                    optional: optionalSet,\n                                    throwError: throwError,\n                                })];\n                        case 3:\n                            authValues = _b.sent();\n                            allFieldsAuthenticated = true;\n                            for (j = 0; j < allAuthFields.length; j++) {\n                                field = allAuthFields[j];\n                                value = authValues[field];\n                                originalKey = allKeys[j];\n                                if (originalKey)\n                                    authResult[originalKey] = value;\n                                if (!optionalSet.has(field) && !value) {\n                                    allFieldsAuthenticated = false;\n                                    break;\n                                }\n                                if (!isUserProvided && process.env[field] !== value) {\n                                    isUserProvided = true;\n                                }\n                            }\n                            if (!allFieldsAuthenticated) {\n                                return [3 /*break*/, 5];\n                            }\n                            if (category === SearchCategories.PROVIDERS) {\n                                authResult.searchProvider = service;\n                            }\n                            else if (category === SearchCategories.SCRAPERS) {\n                                authResult.scraperType = service;\n                            }\n                            else if (category === SearchCategories.RERANKERS) {\n                                authResult.rerankerType = service;\n                            }\n                            return [2 /*return*/, [true, isUserProvided]];\n                        case 4:\n                            _a = _b.sent();\n                            return [3 /*break*/, 5];\n                        case 5:\n                            _i++;\n                            return [3 /*break*/, 1];\n                        case 6: return [2 /*return*/, [false, isUserProvided]];\n                    }\n                });\n            });\n        }\n        var authenticated, authResult, categories, authTypes, _i, categories_1, category, _e, isCategoryAuthenticated, isUserProvided;\n        return __generator(this, function (_f) {\n            switch (_f.label) {\n                case 0:\n                    authenticated = true;\n                    authResult = {};\n                    categories = [\n                        SearchCategories.PROVIDERS,\n                        SearchCategories.SCRAPERS,\n                        SearchCategories.RERANKERS,\n                    ];\n                    authTypes = [];\n                    _i = 0, categories_1 = categories;\n                    _f.label = 1;\n                case 1:\n                    if (!(_i < categories_1.length)) return [3 /*break*/, 4];\n                    category = categories_1[_i];\n                    return [4 /*yield*/, checkAuth(category)];\n                case 2:\n                    _e = _f.sent(), isCategoryAuthenticated = _e[0], isUserProvided = _e[1];\n                    if (!isCategoryAuthenticated) {\n                        authenticated = false;\n                        authTypes.push([category, AuthType.USER_PROVIDED]);\n                        return [3 /*break*/, 3];\n                    }\n                    authTypes.push([category, isUserProvided ? AuthType.USER_PROVIDED : AuthType.SYSTEM_DEFINED]);\n                    _f.label = 3;\n                case 3:\n                    _i++;\n                    return [3 /*break*/, 1];\n                case 4:\n                    authResult.safeSearch = (_b = webSearchConfig === null || webSearchConfig === void 0 ? void 0 : webSearchConfig.safeSearch) !== null && _b !== void 0 ? _b : SafeSearchTypes.MODERATE;\n                    authResult.scraperTimeout = (_c = webSearchConfig === null || webSearchConfig === void 0 ? void 0 : webSearchConfig.scraperTimeout) !== null && _c !== void 0 ? _c : 7500;\n                    return [2 /*return*/, {\n                            authTypes: authTypes,\n                            authResult: authResult,\n                            authenticated: authenticated,\n                        }];\n            }\n        });\n    });\n}\n//# sourceMappingURL=web.js.map","references":["/Users/fairytale/Desktop/interview_projects_2025/LibreChat/packages/data-provider/src/config.ts","/Users/fairytale/Desktop/interview_projects_2025/LibreChat/packages/data-provider/src/config.ts","/Users/fairytale/Desktop/interview_projects_2025/LibreChat/packages/data-provider/src/utils.ts","/Users/fairytale/Desktop/interview_projects_2025/LibreChat/packages/data-provider/src/schemas.ts"],"map":"{\"version\":3,\"file\":\"web.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/web.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/fairytale/Desktop/interview_projects_2025/LibreChat/packages/data-provider/dist/types/web.d.ts","writeByteOrderMark":false,"text":"import type { TCustomConfig, TWebSearchConfig } from './config';\nimport { SearchCategories } from './config';\nimport { AuthType } from './schemas';\nexport declare function loadWebSearchConfig(config: TCustomConfig['webSearch']): TCustomConfig['webSearch'];\nexport type TWebSearchKeys = 'serperApiKey' | 'firecrawlApiKey' | 'firecrawlApiUrl' | 'jinaApiKey' | 'cohereApiKey';\nexport type TWebSearchCategories = SearchCategories.PROVIDERS | SearchCategories.SCRAPERS | SearchCategories.RERANKERS;\nexport declare const webSearchAuth: {\n    providers: {\n        serper: {\n            serperApiKey: 1;\n        };\n    };\n    scrapers: {\n        firecrawl: {\n            firecrawlApiKey: 1;\n            /** Optional (0) */\n            firecrawlApiUrl: 0;\n        };\n    };\n    rerankers: {\n        jina: {\n            jinaApiKey: 1;\n        };\n        cohere: {\n            cohereApiKey: 1;\n        };\n    };\n};\n/**\n * Extracts all API keys from the webSearchAuth configuration object\n */\nexport declare function getWebSearchKeys(): TWebSearchKeys[];\nexport declare const webSearchKeys: TWebSearchKeys[];\nexport declare function extractWebSearchEnvVars({ keys, config, }: {\n    keys: TWebSearchKeys[];\n    config: TCustomConfig['webSearch'] | undefined;\n}): string[];\n/**\n * Type for web search authentication result\n */\nexport interface WebSearchAuthResult {\n    /** Whether all required categories have at least one authenticated service */\n    authenticated: boolean;\n    /** Authentication type (user_provided or system_defined) by category */\n    authTypes: [TWebSearchCategories, AuthType][];\n    /** Original authentication values mapped to their respective keys */\n    authResult: Partial<TWebSearchConfig>;\n}\n/**\n * Loads and verifies web search authentication values\n * @param params - Authentication parameters\n * @returns Authentication result\n */\nexport declare function loadWebSearchAuth({ userId, webSearchConfig, loadAuthValues, throwError, }: {\n    userId: string;\n    webSearchConfig: TCustomConfig['webSearch'];\n    loadAuthValues: (params: {\n        userId: string;\n        authFields: string[];\n        optional?: Set<string>;\n        throwError?: boolean;\n    }) => Promise<Record<string, string>>;\n    throwError?: boolean;\n}): Promise<WebSearchAuthResult>;\n"}}
