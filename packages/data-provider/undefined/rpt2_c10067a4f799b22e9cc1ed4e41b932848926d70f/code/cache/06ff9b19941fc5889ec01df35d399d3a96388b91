{"code":"import { __assign } from \"tslib\";\n/**\n * Loads the memory configuration and validates it\n * @param config - The memory configuration from librechat.yaml\n * @returns The validated memory configuration\n */\nexport function loadMemoryConfig(config) {\n    if (!config) {\n        return undefined;\n    }\n    // If disabled is explicitly true, return the config as-is\n    if (config.disabled === true) {\n        return config;\n    }\n    // Check if the agent configuration is valid\n    var hasValidAgent = config.agent &&\n        (('id' in config.agent && !!config.agent.id) ||\n            ('provider' in config.agent &&\n                'model' in config.agent &&\n                !!config.agent.provider &&\n                !!config.agent.model));\n    // If agent config is invalid, treat as disabled\n    if (!hasValidAgent) {\n        return __assign(__assign({}, config), { disabled: true });\n    }\n    return config;\n}\n/**\n * Checks if memory feature is enabled based on the configuration\n * @param config - The memory configuration\n * @returns True if memory is enabled, false otherwise\n */\nexport function isMemoryEnabled(config) {\n    if (!config) {\n        return false;\n    }\n    if (config.disabled === true) {\n        return false;\n    }\n    // Check if agent configuration is valid\n    var hasValidAgent = config.agent &&\n        (('id' in config.agent && !!config.agent.id) ||\n            ('provider' in config.agent &&\n                'model' in config.agent &&\n                !!config.agent.provider &&\n                !!config.agent.model));\n    return !!hasValidAgent;\n}\n//# sourceMappingURL=memory.js.map","references":["/Users/fairytale/Desktop/interview_projects_2025/LibreChat/packages/data-provider/src/config.ts"],"map":"{\"version\":3,\"file\":\"memory.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/memory.ts\"],\"names\":[],\"mappings\":\";AAEA;;;;GAIG;AACH,MAAM,UAAU,gBAAgB,CAAC,MAA+B;IAC9D,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,0DAA0D;IAC1D,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,EAAE,CAAC;QAC7B,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,4CAA4C;IAC5C,IAAM,aAAa,GACjB,MAAM,CAAC,KAAK;QACZ,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;YAC1C,CAAC,UAAU,IAAI,MAAM,CAAC,KAAK;gBACzB,OAAO,IAAI,MAAM,CAAC,KAAK;gBACvB,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;gBACvB,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAE7B,gDAAgD;IAChD,IAAI,CAAC,aAAa,EAAE,CAAC;QACnB,6BACK,MAAM,KACT,QAAQ,EAAE,IAAI,IACd;IACJ,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,eAAe,CAAC,MAAiC;IAC/D,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,EAAE,CAAC;QAC7B,OAAO,KAAK,CAAC;IACf,CAAC;IAED,wCAAwC;IACxC,IAAM,aAAa,GACjB,MAAM,CAAC,KAAK;QACZ,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;YAC1C,CAAC,UAAU,IAAI,MAAM,CAAC,KAAK;gBACzB,OAAO,IAAI,MAAM,CAAC,KAAK;gBACvB,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;gBACvB,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAE7B,OAAO,CAAC,CAAC,aAAa,CAAC;AACzB,CAAC\"}","dts":{"name":"/Users/fairytale/Desktop/interview_projects_2025/LibreChat/packages/data-provider/dist/types/memory.d.ts","writeByteOrderMark":false,"text":"import type { TCustomConfig, TMemoryConfig } from './config';\n/**\n * Loads the memory configuration and validates it\n * @param config - The memory configuration from librechat.yaml\n * @returns The validated memory configuration\n */\nexport declare function loadMemoryConfig(config: TCustomConfig['memory']): TMemoryConfig | undefined;\n/**\n * Checks if memory feature is enabled based on the configuration\n * @param config - The memory configuration\n * @returns True if memory is enabled, false otherwise\n */\nexport declare function isMemoryEnabled(config: TMemoryConfig | undefined): boolean;\n"}}
